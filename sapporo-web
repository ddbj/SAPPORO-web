#!/bin/bash
set -eu

SCRIPT_DIR=$(cd $(dirname $0) && pwd)
cd $SCRIPT_DIR
DOCKER_COMPOSE_FILE="$SCRIPT_DIR/docker-compose.yml"
DOCKER_COMPOSE_DEV_FILE="$SCRIPT_DIR/etc/docker-compose.dev.yml"
DOCKER_GID=$(cat /etc/group | grep docker | cut -d ":" -f 3)
PIP_PACKAGES="coverage Django django-allauth django-bootstrap4 django-debug-toolbar psycopg2-binary PyYAML requests uWSGI"

function show_base_usage() {
  cat <<EOS
sapporo-web is a set of management commands for SAPPORO-web.

Usage:
  sapporo-web up [-p <PORT>] [-l DEBUG|INFO] [-t <TIME_ZONE>] [--language-code <CODE>] [-d --debug] [--enable-user-signup] [-h]
  sapporo-web create-super-user
  sapporo-web down
  sapporo-web clean
  sapporo-web dev (up|create-super-user|down|clean|freeze|build|test) [-h]

Option:
  -h, --help                  Print usage.
  -v, --version               Print version.
EOS
}

function show_version() {
  grep 'suecharo/sapporo-web' $DOCKER_COMPOSE_FILE | cut -d ':' -f 3
}

function check_docker() {
  if !(type "docker" >/dev/null 2>&1); then
    echo "[FATAL] Please install docker."
    exit 1
  else
    if !(pgrep -f "docker" >/dev/null 2>&1); then
      echo "[FATAL] The docker engine does not seem to be running."
      exit 1
    fi
  fi
}

function check_docker_compose() {
  if !(type "docker-compose" >/dev/null 2>&1); then
    echo "[FATAL] Please install docker-compose."
    exit 1
  fi
}

check_docker
check_docker_compose

function show_web_up_usage() {
  cat <<EOS
Usage:
  sapporo-web up [-p <PORT>] [-l DEBUG|INFO] [-t <TIME_ZONE>] [--language-code <CODE>] [-d --debug] [--disable-user-signup] [-h]

Option:
  -d, --debug                 Use Flask debug mode (default False).
  -p, --port PORT             Set the host TCP/IP port (default 1121).
  -l, --log-level INFO|DEBUG  Set log level (default INFO).
  -t, --timezone TIME_ZONE     Set the timezone (default Asia/Tokyo).
  --language-code CODE        Set the timezone (default en).
  --disable-user-signup       Disable user signup.
  -h, --help                  Print usage.
EOS
}

function web_up() {
  while [[ $# > 0 ]]; do
    case $1 in
    "-h" | "--help")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_web_up_usage
        exit 1
      fi
      show_web_up_usage
      exit 0
      ;;
    "-d" | "--debug")
      SAPPORO_WEB_DEBUG="True"
      shift 1
      ;;
    "-p" | "--port")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the PORT num.\n\n"
        show_web_up_usage
        exit 1
      fi
      expr $2 + 1 >/dev/null 2>&1
      if [[ $? -ge 2 ]]; then
        printf "[FATAL] Please enter int type for the PORT num.\n\n"
        show_web_up_usage
        exit 1
      fi
      if [[ $2 -lt 1 ]]; then
        printf "[FATAL] PORT num must be greater than 1.\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_PORT=$2
      shift 2
      ;;
    "-l" | "--log-level")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the LOG_LEVEL(INFO|DEBUG).\n\n"
        show_web_up_usage
        exit 1
      fi
      if [[ "$2" != "INFO" && "$2" != "DEBUG" ]]; then
        printf "[FATAL] Please enter the LOG_LEVEL(INFO|DEBUG).\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_LOG_LEVEL=$2
      shift 2
      ;;
    "-t" | "--timezone")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the TIME_ZONE.\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_TIME_ZONE=$2
      shift 2
      ;;
    "--language-code")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the LANGUAGE_CODE.\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_LANGUAGE_CODE=$2
      shift 2
      ;;
    "--disable-user-signup")
      SAPPORO_WEB_USER_SIGNUP="False"
      shift 1
      ;;
    -*)
      printf "[FATAL] Unexpected Option: $1\n\n"
      show_web_up_usage
      exit 1
      ;;
    *)
      printf "[FATAL] Unexpected Args: $1\n\n"
      show_web_up_usage
      exit 1
      ;;
    esac
  done

  printf "Start SAPPORO-web up...\n\n"
  cat <<EOS
  Debug              : ${SAPPORO_WEB_DEBUG:-False}
  Port               : ${SAPPORO_WEB_PORT:-1121}
  Log Level          : ${SAPPORO_WEB_LOG_LEVEL:-INFO}
  Timezone           : ${SAPPORO_WEB_TIME_ZONE:-Asia/Tokyo}
  Language Code      : ${SAPPORO_WEB_LANGUAGE_CODE:-en}
  Enable User Signup : ${SAPPORO_WEB_USER_SIGNUP:-True}
EOS
  printf "\n"
  if [[ $(docker network ls | grep 'sapporo-network' | wc -l | awk '{print $1}') == 0 ]]; then
    echo "Creating the Docker network: sapporo-network"
    docker network create sapporo-network
  fi
  env \
    PWD=$SCRIPT_DIR \
    UID=$(id -u) \
    GID=$(id -g) \
    DOCKER_GID=$DOCKER_GID \
    SAPPORO_WEB_DEBUG=${SAPPORO_WEB_DEBUG:-False} \
    SAPPORO_WEB_PORT=${SAPPORO_WEB_PORT:-1121} \
    SAPPORO_WEB_LOG_LEVEL=${SAPPORO_WEB_LOG_LEVEL:-INFO} \
    SAPPORO_WEB_TIME_ZONE=${SAPPORO_WEB_TIME_ZONE:-Asia/Tokyo} \
    SAPPORO_WEB_LANGUAGE_CODE=${SAPPORO_WEB_LANGUAGE_CODE:-en} \
    SAPPORO_WEB_USER_SIGNUP=${SAPPORO_WEB_USER_SIGNUP:-True} \
    docker-compose up -d
  while [[ ! -e "$SCRIPT_DIR/etc/uwsgi/uwsgi.sock" ]]; do
    sleep 2s
    echo "Waiting for SAPPORO-web to start..."
  done
  printf "\nPlease accsess in your brouwser:\n\n"
  echo "    http://localhost:${SAPPORO_WEB_PORT:-1121}/"
  printf "\n"
  printf "Finish SAPPORO-web up...\n"
  exit 0
}

function web_create_super_user() {
  printf "Start SAPPORO-web create suepr user...\n"
  docker-compose \
    exec \
    -u $(id -u):$(id -g) \
    app \
    python3 /opt/SAPPORO/SAPPORO-web/src/manage.py createsuperuser
  printf "Finish SAPPORO-web create suepr user...\n"
  exit 0
}

function web_down() {
  printf "Start SAPPORO-web down...\n"
  docker-compose down
  printf "Finish SAPPORO-web down...\n"
  exit 0
}

function web_clean() {
  printf "Start SAPPORO-web clean...\n"
  git clean -fdx
  docker volume rm sapporo-web_postgres-data
  printf "Finish SAPPORO-web clean...\n"
  exit 0
}

function show_dev_usage() {
  cat <<EOS
Usage:
  sapporo-web dev up [-p <PORT>] [-l DEBUG|INFO] [-t <TIME_ZONE>] [--language-code <CODE>] [-d --debug] [--disable-user-signup] [-h]
  sapporo-web dev create-super-user
  sapporo-web dev down
  sapporo-web dev clean
  sapporo-web dev freeze
  sapporo-web dev build <version>
  sapporo-web dev test

Option:
  -h, --help                  Print usage.
EOS
}

function show_web_dev_up_usage() {
  cat <<EOS
Usage:
  sapporo-web up [-p <PORT>] [-l DEBUG|INFO] [-t <TIME_ZONE>] [--language-code <CODE>] [-d --debug] [--disable-user-signup] [-h]

Option:
  -d, --debug                 Use Flask debug mode (default True).
  -p, --port PORT             Set the host TCP/IP port (default 1121).
  -l, --log-level INFO|DEBUG  Set log level (default DEBUG).
  -t, --timezone TIME_ZONE     Set the timezone (default Asia/Tokyo).
  --language-code CODE        Set the timezone (default en).
  --disable-user-signup       Enable user signup.
  -h, --help                  Print usage.
EOS
}

function web_dev_up() {
  while [[ $# > 0 ]]; do
    case $1 in
    "-h" | "--help")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_web_up_usage
        exit 1
      fi
      show_web_up_usage
      exit 0
      ;;
    "-d" | "--debug")
      SAPPORO_WEB_DEBUG="True"
      shift 1
      ;;
    "-p" | "--port")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the PORT num.\n\n"
        show_web_up_usage
        exit 1
      fi
      expr $2 + 1 >/dev/null 2>&1
      if [[ $? -ge 2 ]]; then
        printf "[FATAL] Please enter int type for the PORT num.\n\n"
        show_web_up_usage
        exit 1
      fi
      if [[ $2 -lt 1 ]]; then
        printf "[FATAL] PORT num must be greater than 1.\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_PORT=$2
      shift 2
      ;;
    "-l" | "--log-level")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the LOG_LEVEL(INFO|DEBUG).\n\n"
        show_web_up_usage
        exit 1
      fi
      if [[ "$2" != "INFO" && "$2" != "DEBUG" ]]; then
        printf "[FATAL] Please enter the LOG_LEVEL(INFO|DEBUG).\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_LOG_LEVEL=$2
      shift 2
      ;;
    "-t" | "--timezone")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the TIME_ZONE.\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_TIME_ZONE=$2
      shift 2
      ;;
    "--language-code")
      if [[ -z $2 ]]; then
        printf "[FATAL] Please enter the LANGUAGE_CODE.\n\n"
        show_web_up_usage
        exit 1
      fi
      SAPPORO_WEB_LANGUAGE_CODE=$2
      shift 2
      ;;
    "--disable-user-signup")
      SAPPORO_WEB_USER_SIGNUP="False"
      shift 1
      ;;
    -*)
      printf "[FATAL] Unexpected Option: $1\n\n"
      show_web_up_usage
      exit 1
      ;;
    *)
      printf "[FATAL] Unexpected Args: $1\n\n"
      show_web_up_usage
      exit 1
      ;;
    esac
  done
  cd $SCRIPT_DIR/etc

  printf "Start SAPPORO-web dev up...\n\n"
  cat <<EOS
  Debug              : ${SAPPORO_WEB_DEBUG:-True}
  Port               : ${SAPPORO_WEB_PORT:-1121}
  Log Level          : ${SAPPORO_WEB_LOG_LEVEL:-DEBUG}
  Timezone           : ${SAPPORO_WEB_TIME_ZONE:-Asia/Tokyo}
  Language Code      : ${SAPPORO_WEB_LANGUAGE_CODE:-en}
  Enable User Signup : ${SAPPORO_WEB_USER_SIGNUP:-True}
EOS
  printf "\n"
  if [[ $(docker network ls | grep 'sapporo-network' | wc -l | awk '{print $1}') == 0 ]]; then
    echo "Creating the Docker network: sapporo-network"
    docker network create sapporo-network
  fi
  env \
    PWD=$SCRIPT_DIR \
    UID=$(id -u) \
    GID=$(id -g) \
    DOCKER_GID=$DOCKER_GID \
    SAPPORO_WEB_DEBUG=${SAPPORO_WEB_DEBUG:-True} \
    SAPPORO_WEB_PORT=${SAPPORO_WEB_PORT:-1121} \
    SAPPORO_WEB_LOG_LEVEL=${SAPPORO_WEB_LOG_LEVEL:-DEBUG} \
    SAPPORO_WEB_TIME_ZONE=${SAPPORO_WEB_TIME_ZONE:-Asia/Tokyo} \
    SAPPORO_WEB_LANGUAGE_CODE=${SAPPORO_WEB_LANGUAGE_CODE:-en} \
    SAPPORO_WEB_USER_SIGNUP=${SAPPORO_WEB_USER_SIGNUP:-True} \
    docker-compose -f $DOCKER_COMPOSE_DEV_FILE up -d
  printf "\nPlease accsess in your brouwser:\n\n"
  echo "    http://localhost:${SAPPORO_WEB_PORT:-1121}/"
  printf "\n"
  printf "Finish SAPPORO-web dev up...\n"
  exit 0
}

function web_dev_create_super_user() {
  cd $SCRIPT_DIR/etc
  printf "Start SAPPORO-web dev create suepr user...\n"
  env \
    PWD=$SCRIPT_DIR \
    UID=$(id -u) \
    GID=$(id -g) \
    DOCKER_GID=$DOCKER_GID \
    docker-compose \
    -f $DOCKER_COMPOSE_DEV_FILE \
    exec \
    -u $UID:$GID \
    app \
    python3 /opt/SAPPORO/SAPPORO-web/src/manage.py createsuperuser
  printf "Finish SAPPORO-web dev create suepr user...\n"
  exit 0
}

function web_dev_down() {
  cd $SCRIPT_DIR/etc
  printf "Start SAPPORO-web dev down...\n"
  docker-compose -f $DOCKER_COMPOSE_DEV_FILE down
  printf "Finish SAPPORO-web dev down...\n"
  exit 0
}

function web_dev_clean() {
  printf "Start SAPPORO-web dev clean...\n"
  git clean -fdx
  printf "Finish SAPPORO-web dev clean...\n"
  exit 0
}

function web_dev_freeze() {
  printf "Start SAPPORO-web dev freeze...\n"
  docker run -d --rm \
    --workdir /opt/SAPPORO/SAPPORO-web/etc \
    -v $SCRIPT_DIR/etc/requirements.txt:/opt/SAPPORO/SAPPORO-web/etc/requirements.txt \
    -u $(id -u):$(id -g) \
    --name sapporo-web-dev-freeze \
    python:slim \
    tail -f /dev/null
  docker exec \
    -u 0:0 \
    sapporo-web-dev-freeze \
    sh -c "
apt update &&
apt install -y build-essential curl iproute2 jq netcat tree &&
pip install -U pip wheel setuptools
pip install $PIP_PACKAGES"
  docker exec \
    -u $(id -u):$(id -g) \
    sapporo-web-dev-freeze \
    sh -c "
pip freeze > requirements.txt"
  docker kill sapporo-web-dev-freeze
  printf "Finish SAPPORO-web dev freeze...\n"
  exit 0
}

function web_dev_test() {
  check_docker
  printf "Start SAPPORO-web dev test...\n"
  mkdir -p $SCRIPT_DIR/etc/coverage_html
  DOCKER_IMAGE=$(grep "image: suecharo/sapporo-web" $DOCKER_COMPOSE_FILE | sed -e "s/    image: //g")
  docker run -d --rm \
    --workdir /opt/SAPPORO/SAPPORO-web/etc \
    -v $SCRIPT_DIR/etc:/opt/SAPPORO/SAPPORO-web/etc \
    -v $SCRIPT_DIR/src:/opt/SAPPORO/SAPPORO-web/src \
    -v $SCRIPT_DIR/log/app:/opt/SAPPORO/SAPPORO-web/log/app \
    -u $(id -u):$(id -g) \
    --name sapporo-web-dev-test \
    $DOCKER_IMAGE \
    tail -f /dev/null
  docker exec \
    -u $(id -u):$(id -g) \
    sapporo-web-dev-test \
    coverage run /opt/SAPPORO/SAPPORO-web/src/manage.py test app
  docker exec \
    -u $(id -u):$(id -g) \
    sapporo-web-dev-test \
    coverage report
  docker exec \
    -u $(id -u):$(id -g) \
    sapporo-web-dev-test \
    coverage html
  docker kill sapporo-web-dev-test
  printf "Finish SAPPORO-web dev test...\n"
  exit 0
}

function web_dev_build() {
  check_docker
  printf "Start SAPPORO-web dev build...\n"
  docker build --no-cache -t suecharo/sapporo-web:$1 .
  printf "Finish SAPPORO-web dev build...\n"
  exit 0
}

function web_dev() {
  if [[ $# == 0 ]]; then
    show_dev_usage
    exit 1
  fi

  while [[ $# > 0 ]]; do
    case $1 in
    "-h" | "--help")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_dev_usage
        exit 1
      fi
      show_dev_usage
      exit 0
      ;;
    "up")
      shift 1
      web_dev_up $@
      ;;
    "create-super-user")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_dev_usage
        exit 1
      fi
      web_dev_create_super_user
      ;;
    "down")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_dev_usage
        exit 1
      fi
      web_dev_down
      ;;
    "clean")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_dev_usage
        exit 1
      fi
      web_dev_clean
      ;;
    "freeze")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_dev_usage
        exit 1
      fi
      web_dev_freeze
      ;;
    "build")
      shift 1
      if [[ $# -ne 1 ]]; then
        show_dev_usage
        exit 1
      fi
      web_dev_build $1
      ;;
    "test")
      shift 1
      if [[ $# -ne 0 ]]; then
        printf "[FATAL] Unexpected Option or Args: $1\n\n"
        show_dev_usage
        exit 1
      fi
      web_dev_test
      ;;
    -*)
      printf "[FATAL] Unexpected Option: $1\n\n"
      show_dev_usage
      exit 1
      ;;
    *)
      printf "[FATAL] Unexpected Args: $1\n\n"
      show_dev_usage
      exit 1
      ;;
    esac
  done
}

if [[ $# == 0 ]]; then
  show_base_usage
  exit 1
fi

while [[ $# > 0 ]]; do
  case $1 in
  "-h" | "--help")
    shift 1
    if [[ $# -ne 0 ]]; then
      printf "[FATAL] Unexpected Option or Args: $1\n\n"
      show_base_usage
      exit 1
    fi
    show_base_usage
    exit 0
    ;;
  "-v" | "--version")
    shift 1
    if [[ $# -ne 0 ]]; then
      printf "[FATAL] Unexpected Option or Args: $1\n\n"
      show_base_usage
      exit 1
    fi
    show_version
    exit 0
    ;;
  "up")
    shift 1
    web_up $@
    ;;
  "create-super-user")
    shift 1
    if [[ $# -ne 0 ]]; then
      printf "[FATAL] Unexpected Option or Args: $1\n\n"
      show_base_usage
      exit 1
    fi
    web_create_super_user
    ;;
  "down")
    shift 1
    if [[ $# -ne 0 ]]; then
      printf "[FATAL] Unexpected Option or Args: $1\n\n"
      show_base_usage
      exit 1
    fi
    web_down
    ;;
  "clean")
    shift 1
    if [[ $# -ne 0 ]]; then
      printf "[FATAL] Unexpected Option or Args: $1\n\n"
      show_base_usage
      exit 1
    fi
    web_clean
    ;;
  "dev")
    shift 1
    web_dev $@
    ;;
  -*)
    printf "[FATAL] Unexpected Option: $1\n\n"
    show_base_usage
    exit 1
    ;;
  *)
    printf "[FATAL] Unexpected Args: $1\n\n"
    show_base_usage
    exit 1
    ;;
  esac
done
